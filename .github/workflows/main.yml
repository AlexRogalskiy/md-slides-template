name: presentation
on: [push]
jobs:
  github_page:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        ref: refs/heads/master
    - uses: actions/setup-node@master
      with:
        node-version: 12.x
    - name: Make HTML
      env:
        GITHUB_REPOSITORY_NAME: ${GITHUB_REPOSITORY#*/}
      run: |
        npx @marp-team/marp-cli ${GITHUB_REPOSITORY_NAME}.md --output index.html
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ github.token }}
        publish_dir: ./

  github_release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        ref: refs/heads/master
    - uses: actions/setup-node@master
      with:
        node-version: 12.x
    - name: Make PDF
      env:
        GITHUB_REPOSITORY_NAME: ${GITHUB_REPOSITORY#*/}
      run: npx @marp-team/marp-cli ${GITHUB_REPOSITORY_NAME}.md --pdf --output presentation.pdf

    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: ${GITHUB_REPOSITORY_NAME}
        path: ./presentation.pdf

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        body: |
          lorem ipsum
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./presentation.pdf
        asset_name: presentation.pdf
        asset_content_type: application/pdf
